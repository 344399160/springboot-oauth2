package com.scistor.tab.auth.util;import javax.xml.bind.JAXBContext;import javax.xml.bind.JAXBException;import javax.xml.bind.Marshaller;import javax.xml.bind.Unmarshaller;import java.io.StringReader;import java.io.StringWriter;/** * Created by liukai on 2015/8/6. */public class XMLUtil {    /**     * 将java类转成XML     * @param obj     * @return     */    public static String convertToXml(Object obj) {        StringWriter sw = new StringWriter();        try {            // 利用jdk中自带的转换类实现            JAXBContext context = JAXBContext.newInstance(obj.getClass());            Marshaller marshaller = context.createMarshaller();            // 格式化xml输出的格式            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,                    Boolean.TRUE);            // 将对象转换成输出流形式的xml            marshaller.marshal(obj, sw);        } catch (JAXBException e) {            e.printStackTrace();        }        return sw.toString();    }    @SuppressWarnings("unchecked")    /**     * 将String类型的xml转换成对象     */    public static Object convertXmlStrToObject(Class clazz, String xmlStr) {        Object xmlObject = null;        try {            JAXBContext context = JAXBContext.newInstance(clazz);            // 进行将Xml转成对象的核心接口            Unmarshaller unmarshaller = context.createUnmarshaller();            StringReader sr = new StringReader(xmlStr);            xmlObject = unmarshaller.unmarshal(sr);        } catch (JAXBException e) {            e.printStackTrace();        }        return xmlObject;    }}